log_format customlog  '$remote_addr - $remote_user [$time_local]'
                      '\n\nREQUEST: "$request" | "$request_body" | $status $body_bytes_sent | '
                      '"$http_referer" | "$http_user_agent"'
                      '\n\nRESPONSE: "$resp_body"'
                      '\n==========================================================';

upstream client_LB {
  server web:3000;
}

server {
  listen 8077;

  client_max_body_size 4G;

  access_log /var/logs/access.log customlog;
  error_log /var/logs/error.log;

  location / {
    proxy_pass         http://client_LB;
    proxy_redirect     off;
    proxy_set_header   Host $host;
    proxy_set_header   X-Real-IP $remote_addr;
    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Host $server_name;
  }

  location /api/ {
    proxy_pass http://nodejs:8080;
    proxy_set_header   Host $host;
    proxy_set_header   X-Real-IP $remote_addr;
  }

  # Внешний модуль LUA для записи в логи ответов от сервера
  lua_need_request_body on;

  set $resp_body "";

  body_filter_by_lua '
  local resp_body = string.sub(ngx.arg[1], 1, 1000)
  ngx.ctx.buffered = (ngx.ctx.buffered or "") .. resp_body
  if ngx.arg[2] then
    ngx.var.resp_body = ngx.ctx.buffered
  end
  ';
  # Внешний модуль LUA для записи в логи ответов от сервера

}
